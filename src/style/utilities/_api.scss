@each $prefix, $map in $utilities {
    $values: map-get($map, "values");
    $propertys: map-get($map, "propertys");

    // @include generate-utility($prefix, $values, $propertys);

    // @include breakpoint(sm) {
    //     @include breakpoint-generate-utility($prefix, $values, $propertys, sm);
    // }

    // @include breakpoint(md) {
    //     @include breakpoint-generate-utility($prefix, $values, $propertys, md);
    // }

    // @include breakpoint(lg) {
    //     @include breakpoint-generate-utility($prefix, $values, $propertys, lg);
    // }

    // @include breakpoint(xl) {
    //     @include breakpoint-generate-utility($prefix, $values, $propertys, xl);
    // }

    // @include breakpoint(xxl) {
    //     @include breakpoint-generate-utility($prefix, $values, $propertys, xxl);
    // }
}

@each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);

        @each $key, $utility in $utilities {
            @if (type-of($utility) == "map") and
                (map-get($utility, responsive) or $infix == "") and
                not(map-get($utility, rfs))
            {
                @include generate-utility($utility, $infix);
            }
        }
    }
}
// RFS rescaling
@media (min-width: #{$rfs-breakpoint}) {
    @each $breakpoint in map-keys($breakpoints) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);

        @if (map-get($breakpoints, $breakpoint) < $rfs-breakpoint) {
            // Loop over each utility property
            @each $key, $utility in $utilities {
                // The utility can be disabled with `false`, thus check if the utility is a map first
                // Only proceed if responsive media queries are enabled or if it's the base media query
                @if (type-of($utility) == "map") and
                    map-get($utility, rfs) and
                    (map-get($utility, responsive) or $infix == "")
                {
                    @include generate-utility($utility, $infix);
                }
            }
        }
    }
}

// Print utilities
@media print {
    @each $key, $utility in $utilities {
        // The utility can be disabled with `false`, thus check if the utility is a map first
        // Then check if the utility needs print styles
        @if type-of($utility) == "map" and map-get($utility, print) == true {
            @include generate-utility($utility, "-print");
        }
    }
}
