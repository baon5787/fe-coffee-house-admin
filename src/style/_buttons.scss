//
// Base styles
//

.btn {
    // scss-docs-start btn-css-vars
    --#{$prefix}btn-padding-x: #{$btn-padding-x};
    --#{$prefix}btn-padding-y: #{$btn-padding-y};
    --#{$prefix}btn-font-size: --#{$btn-font-size};
    --#{$prefix}btn-font-weight: #{$btn-font-weight};
    --#{$prefix}btn-line-height: #{$btn-line-height};
    --#{$prefix}btn-color: #{$btn-color};
    --#{$prefix}btn-bg: transparent;
    --#{$prefix}btn-border-width: #{$btn-border-width};
    --#{$prefix}btn-border-color: transparent;
    --#{$prefix}btn-border-radius: #{$btn-border-radius};
    --#{$prefix}btn-hover-border-color: transparent;
    --#{$prefix}btn-box-shadow: #{$btn-box-shadow};
    --#{$prefix}btn-disabled-opacity: #{$btn-disabled-opacity};
    --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), 0.5);
    // scss-docs-end btn-css-vars

    display: inline-block;
    padding: var(--#{$prefix}btn-padding-y) var(--#{$prefix}btn-padding-x);
    font-family: var(--#{$prefix}btn-font-family);
    font-size: var(--#{$prefix}btn-font-size);
    font-weight: var(--#{$prefix}btn-font-weight);
    line-height: var(--#{$prefix}btn-line-height);
    color: var(--#{$prefix}btn-color);
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
    border: var(--#{$prefix}btn-border-width) solid var(--#{$prefix}btn-border-color);
    background-color: var(--#{$prefix}btn-bg);
    box-shadow: var(--#{$prefix}btn-box-shadow);
    @include border-radius(var(--#{$prefix}btn-border-radius));
    @include transition($btn-transition);

    &:hover {
        color: var(--#{$prefix}btn-hover-color);
        background-color: var(--#{$prefix}btn-hover-bg);
        border-color: var(--#{$prefix}btn-hover-border-color);
    }

    .btn-check + &:hover {
        color: var(--#{$prefix}btn-color);
        background-color: var(--#{$prefix}btn-bg);
        border-color: var(--#{$prefix}btn-border-color);
    }

    &:focus-visible {
        color: var(--#{$prefix}btn-hover-color);
        background-color: var(--#{$prefix}btn-hover-bg);
        border-color: var(--#{$prefix}btn-hover-border-color);
        outline: 0;
        box-shadow: var(--#{$prefix}btn-box-shadow), var(--bs-btn-focus-box-shadow);
    }

    .btn-check:focus-visible + & {
        border-color: var(--#{$prefix}btn-hover-border-color);
        outline: 0;
        box-shadow: var(--#{$prefix}btn-box-shadow), var(--bs-#{$prefix}focus-box-shadow);
    }

    .btn-check:checked + &,
    :not(.btn-check) + &:active,
    &:first-child:active,
    &.active,
    &.show {
        color: var(--#{$prefix}btn-active-color);
        background-color: var(--#{$prefix}btn-active-bg);
        border-color: var(--#{$prefix}btn-active-border-color);
        box-shadow: var(--#{$prefix}btn-active-shadow);

        &:focus-visible {
            box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
        }
    }

    &:disabled,
    &.disabled,
    fieldset:disabled & {
        color: var(--#{$prefix}btn-disabled-color);
        pointer-events: none;
        background-color: var(--#{$prefix}btn-disabled-bg);
        border-color: var(--#{$prefix}btn-disabled-border-color);
        opacity: var(--#{$prefix}btn-disabled-opacity);
        box-shadow: none;
    }
}

.btn {
    --bs-btn-color: var(--#{$prefix}body-color);
    outline: 0 !important;

    &:not(.btn-shadow):not(.shadow):not(.shadow-sm):not(.shadow-lg):not(.shadow-xs) {
        box-shadow: none;
    }

    &:not(.btn-outline):not(.btn-dashed):not(.btn-bordered):not(.border-hover) {
        &:not(.border-active):not(.btn-flush):not(.btn-icon) {
            &.btn-lg {
                padding: add($btn-padding-y-lg, $border-width) add($btn-padding-y-lg, $border-width);
            }

            &.btn-sm {
                padding: add($btn-padding-y-sm, $border-width) add($btn-padding-x-sm, $border-width);
            }
        }
    }

    &.btn-link {
        border: 0;
        border-radius: 0;
        padding-left: 0 !important;
        padding-right: 0 !important;
        text-decoration: none;
        font-weight: $btn-font-weight;
    }

    &.btn-outline {
        &:not(.btn-outline-dashed) {
            border: $btn-border-width solid var(--#{$prefix}gray-300);
        }

        &.btn-outline-dashed {
            border-width: $border-width;
            border-style: dashed;
        }
    }

    &.btn-outline-dashed {
        border: $btn-border-width dashed var(--bs-gray-300);
    }

    &.btn-flush {
        appearance: none;
        box-shadow: none;
        border-radius: 0;
        border: none;
        cursor: pointer;
        background-color: transparent;
        outline: 0 !important;
        margin: 0;
        padding: 0;
    }

    &.btn-flex {
        display: inline-flex;
        align-items: center;
    }

    &.btn-trim-start {
        justify-content: flex-start !important;
        padding-left: 0 !important;
    }

    &.btn-trim-end {
        justify-content: flex-end !important;
        padding-right: 0 !important;
    }

    > i {
        display: inline-flex;
        font-size: $btn-font-size-i;
        padding-right: $btn-padding-y-i;
        vertical-align: middle;
    }

    &.btn-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0;
        height: add($btn-icon-size, add($btn-padding-y * 2, $border-width * 2, false));
        width: add($btn-icon-size, add($btn-padding-y * 2, $border-width * 2, false));
        line-height: 1;

        i {
            padding-right: 0;
        }

        &:not(.btn-outline):not(.btn-dashed):not(.border-hover):not(.border-active):not(.btn-flush) {
            border: 0;
        }

        &.btn-lg {
            height: add($btn-icon-size, add($input-btn-height-lg, $border-width * 2, false));
            width: add($btn-icon-size, add($input-btn-height-lg, $border-width * 2, false));
        }

        &.btn-sm {
            height: add($btn-icon-size, add($input-btn-height-sm, $border-width * 2, false));
            width: add($btn-icon-size, add($input-btn-height-sm, $border-width * 2, false));
        }

        &.btn-circle {
            border-radius: 50%;
        }
    }
}

// .btn-group-lg > .btn {
//     &:not(.btn-outline):not(.btn-dashed):not(.btn-bordered):not(.border-hover) {
//         &:not(.border-active):not(.btn-flush):not(.btn-icon) {
//             padding: add($btn-padding-y-lg, $border-width) add($btn-padding-y-lg, $border-width);
//         }
//     }

//     &.btn-icon {
//         height: add($btn-icon-size, add($input-btn-height-lg, $border-width * 2, false));
//         width: add($btn-icon-size, add($input-btn-height-lg, $border-width * 2, false));
//     }
// }

// .btn-group-sm > .btn {
//     &:not(.btn-outline):not(.btn-dashed):not(.btn-bordered):not(.border-hover) {
//         &:not(.border-active):not(.btn-flush):not(.btn-icon) {
//             padding: add($btn-padding-y-sm, $border-width) add($btn-padding-x-sm, $border-width);
//         }
//     }

//     &.btn-icon {
//         height: add($btn-icon-size, add($input-btn-height-lg, $border-width * 2, false));
//         width: add($btn-icon-size, add($input-btn-height-lg, $border-width * 2, false));
//     }
// }

@each $color, $value in $theme-colors {
    .btn-#{$color} {
        @if $color == "light" {
            @include button-variant(
                $value,
                $value,
                $hover-background: shade-color($value, $btn-hover-bg-shade-amount),
                $hover-border: shade-color($value, $btn-hover-border-shade-amount),
                $active-background: shade-color($value, $btn-active-bg-shade-amount),
                $active-border: shade-color($value, $btn-active-border-shade-amount)
            );
        } @else if $color == "dark" {
            @include button-variant(
                $value,
                $value,
                $hover-background: tint-color($value, $btn-hover-bg-tint-amount),
                $hover-border: tint-color($value, $btn-hover-border-tint-amount),
                $active-background: tint-color($value, $btn-active-bg-tint-amount),
                $active-border: tint-color($value, $btn-active-border-tint-amount)
            );
        } @else {
            @include button-variant($value, $value);
        }
    }
}

@each $color, $value in $theme-colors {
    .btn-outline-#{$color} {
        @include button-outline-variant($value);
    }
}

//
// Link buttons
//

.btn-link {
    --#{$prefix}btn-font-weight: #{$font-weight-normal};
    --#{$prefix}btn-color: #{$btn-link-color};
    --#{$prefix}btn-bg: transparent;
    --#{$prefix}btn-border-color: transparent;
    --#{$prefix}btn-hover-color: #{$btn-link-hover-color};
    --#{$prefix}btn-hover-border-color: transparent;
    --#{$prefix}btn-active-color: #{$btn-link-hover-color};
    --#{$prefix}btn-active-border-color: transparent;
    --#{$prefix}btn-disabled-color: #{$btn-link-disabled-color};
    --#{$prefix}btn-disabled-border-color: transparent;
    --#{$prefix}btn-box-shadow: 0 0 0 #000; // Can't use `none` as keyword negates all values when used with multiple shadows
    --#{$prefix}btn-focus-shadow-rgb: #{to-rgb($link-focus-shadow-rgb)};
    text-decoration: $link-decoration;

    &:hover,
    &:focus-visible {
        text-decoration: $link-hover-decoration;
    }

    &:focus-visible {
        color: var(--#{$prefix}btn-color);
    }

    &:hover {
        color: var(--#{$prefix}btn-hover-color);
    }

    // No need for an active state here
}

//
// Button Sizes
//

.btn-lg,
.btn-group-lg > .btn {
    @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
}

.btn-sm,
.btn-group-sm > .btn {
    @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}

.btn-check {
    position: absolute;
    clip: rect(0, 0, 0, 0);
    pointer-events: none;

    &:disabled,
    &[disabled] {
        & + .btn {
            pointer-events: none;
            filter: none;
            opacity: 0.65;
        }
    }
}

.btn-reset {
    background-color: transparent;
    border: 0;
    box-shadow: none;
    user-select: none;
    outline: 0;
}

.btn-check:active + .btn.btn-outline.btn-outline-dashed,
.btn-check:checked + .btn.btn-outline.btn-outline-dashed,
.btn.btn-outline.btn-outline-dashed.active,
.btn.btn-outline.btn-outline-dashed.show,
.btn.btn-outline.btn-outline-dashed:active:not(.btn-active),
.btn.btn-outline.btn-outline-dashed:focus:not(.btn-active),
.btn.btn-outline.btn-outline-dashed:hover:not(.btn-active),
.show > .btn.btn-outline.btn-outline-dashed {
    border-color: var(--#{$prefix}primary);
}

@each $color, $value in $theme-colors {
    @include btn-theme-color($color);
}

@each $color, $value in $btn-text-themes-grays {
    @include btn-text-color($color);
}

[data-bs-theme="dark"] .btn {
    &.btn-dark {
        color: $gray-800-dark;
        background-color: $gray-400-dark;

        i,
        .svg-icon {
            color: $gray-800-dark;
        }

        &.dropdown-toggle:after {
            color: $gray-800-dark;
        }
    }
}

.btn-check:active + [data-bs-theme="dark"] .btn.btn-dark,
.btn-check:checked + [data-bs-theme="dark"] .btn.btn-dark,
.show > [data-bs-theme="dark"] .btn.btn-dark,
[data-bs-theme="dark"] .btn.btn-dark.active,
[data-bs-theme="dark"] .btn.btn-dark.show,
[data-bs-theme="dark"] .btn.btn-dark:active:not(.btn-active),
[data-bs-theme="dark"] .btn.btn-dark:focus:not(.btn-active),
[data-bs-theme="dark"] .btn.btn-dark:hover:not(.btn-active) {
    color: $gainsboro;
    background-color: $independence !important;

    i,
    .svg-icon {
        color: $gainsboro;
    }

    &.dropdown-toggle:after {
        color: $gainsboro;
    }
}

@include media-prefers-reduced-motion() {
    .btn {
        transition: none;
    }
}
