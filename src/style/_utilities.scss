$utilities: (
    // scss-docs-start utils-vertical-align
    "align":
        (
            property: vertical-align,
            class: align,
            values: baseline top middle bottom text-bottom text-top
        ),
    // scss-docs-end utils-vertical-align
    // scss-docs-start utils-float
    "float":
        (
            responsive: true,
            property: float,
            values: $floats
        ),
    // scss-docs-end utils-float
    // Object Fit utilities
    // scss-docs-start utils-object-fit
    "object-fit":
        (
            responsive: true,
            property: object-fit,
            values: $object-fits
        ),
    // scss-docs-end utils-object-fit
    // scss-docs-start utils-overflow
    "overflow":
        (
            responsive: true,
            property: overflow,
            values: auto hidden visible scroll
        ),
    "overflow-x": (
        property: overflow-x,
        values: auto hidden visible scroll
    ),
    "overflow-y": (
        property: overflow-y,
        values: auto hidden visible scroll
    ),
    // scss-docs-end utils-overflow
    // scss-docs-start utils-display
    "display":
        (
            responsive: true,
            print: true,
            property: display,
            class: d,
            values: inline inline-block block grid inline-grid table table-row table-cell flex inline-flex none
        ),
    // scss-docs-end utils-display
    // scss-docs-start utils-shadow
    "shadow":
        (
            property: box-shadow,
            class: shadow,
            values: $shadows
        ),
    // scss-docs-end utils-shadow
    // scss-docs-start utils-focus-ring
    "focus-ring":
        (
            css-var: true,
            css-variable-name: focus-ring-color,
            class: focus-ring,
            values: $utilities-focus-ring-colors
        ),
    // scss-docs-end utils-focus-ring
    // scss-docs-start utils-position
    "position":
        (
            responsive: true,
            property: position,
            values: static relative absolute fixed sticky
        ),
    "top": (
        property: top,
        values: $position-values
    ),
    "bottom": (
        property: bottom,
        values: $position-values
    ),
    "start": (
        property: left,
        class: start,
        values: $position-values
    ),
    "end": (
        property: right,
        class: end,
        values: $position-values
    ),
    "translate-middle": (
        property: transform,
        class: translate-middle,
        values: (
            null: translate(-50%, -50%),
            x: translateX(-50%),
            y: translateY(-50%)
        )
    ),
    // scss-docs-end utils-position
    // scss-docs-start utils-borders
    "border":
        (
            property: border,
            values: $borders
        ),
    "border-top": (
        property: border-top,
        values: $borders
    ),
    "border-end": (
        property: border-right,
        class: border-end,
        values: $borders
    ),
    "border-bottom": (
        property: border-bottom,
        values: $borders
    ),
    "border-start": (
        property: border-left,
        class: border-start,
        values: $borders
    ),
    "border-color-local": (
        property: border-color,
        class: border,
        local-vars: (
            "border-opacity": 1
        ),
        values: $utilities-border-colors
    ),
    "border-gray": (
        property: border-color,
        class: border,
        values: $utilities-grays
    ),
    "border-top-style": (
        property: border-top-style,
        class: border-top,
        values: (
            dashed: dashed,
            dotted: dotted
        )
    ),
    "border-bottom-style": (
        property: border-bottom-style,
        class: border-bottom,
        values: (
            dashed: dashed,
            dotted: dotted
        )
    ),
    "border-start-style": (
        property: border-left-style,
        class: border-start,
        values: (
            dashed: dashed,
            dotted: dotted
        )
    ),
    "border-end-style": (
        property: border-right-style,
        class: border-end,
        values: (
            dashed: dashed,
            dotted: dotted
        )
    ),
    "border-style": (
        property: border-style,
        class: border,
        values: (
            dotted: dotted
        )
    ),
    "border-color": (
        property: border-color,
        class: border,
        values: (
            "transparent": transparent,
            body: var(--#{$prefix}body-bg)
        )
    ),
    "subtle-border-color": (
        property: border-color,
        class: border,
        values: $utilities-border-subtle
    ),
    "border-width": (
        property: border-width,
        class: border,
        values: $border-widths
    ),
    "border-opacity": (
        css-var: true,
        class: border-opacity,
        values: $opacitys-base
    ),
    "border-top-width": (
        property: border-top-width,
        class: border-top,
        values: $border-widths
    ),
    "border-bottom-width": (
        property: border-bottom-width,
        class: border-bottom,
        values: $border-widths
    ),
    "border-right-width": (
        property: border-right-width,
        class: border-right,
        values: $border-widths
    ),
    "border-left-width": (
        property: border-left-width,
        class: border-left,
        values: $border-widths
    ),
    // scss-docs-end utils-borders
    // Letter utilities
    // scss-docs-start utils-Letter
    "letter-spacing":
        (
            property: letter-spacing,
            class: ls,
            values: $letters
        ),
    // Negative Letter utilities
    "negative-letter-spacing":
        (
            property: letter-spacing,
            class: ls,
            values: $negative-letters
        ),
    // scss-docs-end utils-Letter
    // Sizing utilities
    // scss-docs-start utils-sizing
    "width":
        (
            responsive: true,
            property: width,
            class: w,
            values: $pxs
        ),
    "max-width": (
        responsive: true,
        property: max-width,
        class: mw,
        values: $pxs
    ),
    "min-width": (
        responsive: true,
        property: min-width,
        class: min-w,
        values: $pxs
    ),
    "width-vw": (
        property: width,
        class: vw,
        values: (
            100: 100vw
        )
    ),
    "min-width-vw": (
        property: min-width,
        class: min-vw,
        values: (
            100: 100vw
        )
    ),
    "height": (
        responsive: true,
        property: height,
        class: h,
        values: $pxs
    ),
    "max-height": (
        responsive: true,
        property: max-height,
        class: mh,
        values: $pxs
    ),
    "min-height": (
        responsive: true,
        property: min-height,
        class: min-h,
        values: $pxs
    ),
    "height-vh": (
        property: height,
        class: vh,
        values: (
            100: 100vh
        )
    ),
    "min-height-vh": (
        property: min-height,
        class: min-vh,
        values: (
            100: 100vh
        )
    ),
    // scss-docs-end utils-sizing
    // Flex utilities
    // scss-docs-start utils-flex
    "flex":
        (
            responsive: true,
            property: flex,
            values: (
                fill: 1 1 auto
            )
        ),
    "flex-direction": (
        responsive: true,
        property: flex-direction,
        class: flex,
        values: row column row-reverse column-reverse
    ),
    "flex-grow": (
        responsive: true,
        property: flex-grow,
        class: flex,
        values: (
            grow-0: 0,
            grow-1: 1
        )
    ),
    "flex-shrink": (
        responsive: true,
        property: flex-shrink,
        class: flex,
        values: (
            shrink-0: 0,
            shrink-1: 1
        )
    ),
    "flex-wrap": (
        responsive: true,
        property: flex-wrap,
        class: flex,
        values: wrap nowrap wrap-reverse
    ),
    "justify-content": (
        responsive: true,
        property: justify-content,
        values: $justify-contents
    ),
    "align-items": (
        responsive: true,
        property: align-items,
        values: $align-items
    ),
    "align-content": (
        responsive: true,
        property: align-content,
        values: $align-contents
    ),
    "align-self": (
        responsive: true,
        property: align-self,
        values: $align-selfs
    ),
    "order": (
        responsive: true,
        property: order,
        values: $orders
    ),
    // scss-docs-end utils-flex
    // Margin utilities
    // scss-docs-start utils-spacing
    "margin":
        (
            responsive: true,
            property: margin,
            class: m,
            values:
                map-merge(
                    $spacers,
                    (
                        auto: auto
                    )
                )
        ),
    "margin-x": (
        responsive: true,
        property: margin-right margin-left,
        class: mx,
        values:
            map-merge(
                $spacers,
                (
                    auto: auto
                )
            )
    ),
    "margin-y": (
        responsive: true,
        property: margin-top margin-bottom,
        class: my,
        values:
            map-merge(
                $spacers,
                (
                    auto: auto
                )
            )
    ),
    "margin-top": (
        responsive: true,
        property: margin-top,
        class: mt,
        values:
            map-merge(
                $spacers,
                (
                    auto: auto
                )
            )
    ),
    "margin-end": (
        responsive: true,
        property: margin-right,
        class: me,
        values:
            map-merge(
                $spacers,
                (
                    auto: auto
                )
            )
    ),
    "margin-bottom": (
        responsive: true,
        property: margin-bottom,
        class: mb,
        values:
            map-merge(
                $spacers,
                (
                    auto: auto
                )
            )
    ),
    "margin-start": (
        responsive: true,
        property: margin-left,
        class: ms,
        values:
            map-merge(
                $spacers,
                (
                    auto: auto
                )
            )
    ),
    // Negative margin utilities
    "negative-margin":
        (
            responsive: true,
            property: margin,
            class: m,
            values: $negative-spacers
        ),
    "negative-margin-x": (
        responsive: true,
        property: margin-right margin-left,
        class: mx,
        values: $negative-spacers
    ),
    "negative-margin-y": (
        responsive: true,
        property: margin-top margin-bottom,
        class: my,
        values: $negative-spacers
    ),
    "negative-margin-top": (
        responsive: true,
        property: margin-top,
        class: mt,
        values: $negative-spacers
    ),
    "negative-margin-end": (
        responsive: true,
        property: margin-right,
        class: me,
        values: $negative-spacers
    ),
    "negative-margin-bottom": (
        responsive: true,
        property: margin-bottom,
        class: mb,
        values: $negative-spacers
    ),
    "negative-margin-start": (
        responsive: true,
        property: margin-left,
        class: ms,
        values: $negative-spacers
    ),
    // Padding utilities
    "padding":
        (
            responsive: true,
            property: padding,
            class: p,
            values: $spacers
        ),
    "padding-x": (
        responsive: true,
        property: padding-right padding-left,
        class: px,
        values: $spacers
    ),
    "padding-y": (
        responsive: true,
        property: padding-top padding-bottom,
        class: py,
        values: $spacers
    ),
    "padding-top": (
        responsive: true,
        property: padding-top,
        class: pt,
        values: $spacers
    ),
    "padding-end": (
        responsive: true,
        property: padding-right,
        class: pe,
        values: $spacers
    ),
    "padding-bottom": (
        responsive: true,
        property: padding-bottom,
        class: pb,
        values: $spacers
    ),
    "padding-start": (
        responsive: true,
        property: padding-left,
        class: ps,
        values: $spacers
    ),
    // Gap utility
    "gap":
        (
            responsive: true,
            property: gap,
            class: gap,
            values: $spacers
        ),
    "row-gap": (
        responsive: true,
        property: row-gap,
        class: row-gap,
        values: $spacers
    ),
    "column-gap": (
        responsive: true,
        property: column-gap,
        class: column-gap,
        values: $spacers
    ),
    // scss-docs-end utils-spacing
    // Text
    // scss-docs-start utils-text
    "font-family":
        (
            property: font-family,
            class: font,
            values: (
                monospace: var(--#{$prefix}font-monospace)
            )
        ),
    "font-size": (
        responsive: true,
        property: font-size,
        class: fs,
        values: $font-sizes
    ),
    "min-font-size": (
        rfs: true,
        responsive: true,
        property: font-size,
        class: fs,
        values: $min-lg-font-sizes
    ),
    "font-style": (
        property: font-style,
        class: fst,
        values: italic normal
    ),
    "font-weight": (
        property: font-weight,
        class: fw,
        values: (
            lighter: $font-weight-lighter,
            light: $font-weight-light,
            normal: $font-weight-normal,
            medium: $font-weight-medium,
            semibold: $font-weight-semibold,
            bold: $font-weight-bold,
            bolder: $font-weight-bolder
        )
    ),
    "line-height": (
        property: line-height,
        class: lh,
        values: (
            0: 0,
            1: 1,
            sm: $line-height-sm,
            base: $line-height-base,
            lg: $line-height-lg,
            xl: $line-height-xl,
            xxl: $line-height-xxl
        )
    ),
    "text-align": (
        responsive: true,
        property: text-align,
        class: text,
        values: $text-aligns
    ),
    "text-decoration": (
        property: text-decoration,
        values: none underline line-through
    ),
    "text-transform": (
        property: text-transform,
        class: text,
        values: lowercase uppercase capitalize
    ),
    "white-space": (
        property: white-space,
        class: text,
        values: (
            wrap: normal,
            nowrap: nowrap
        )
    ),
    "word-wrap": (
        property: word-wrap word-break,
        class: text,
        values: (
            break: break-word
        )
    ),
    // scss-docs-end utils-text
    // scss-docs-start utils-color
    "color":
        (
            property: color,
            class: text,
            local-vars: (
                "text-opacity": 1
            ),
            values:
                map-merge(
                    $utilities-text-colors,
                    (
                        "muted": var(--#{$prefix}secondary-color),
                        "black-50": rgba($black, 0.5),
                        "white-50": rgba($white, 0.5),
                        "body-secondary": var(--#{$prefix}secondary-color),
                        "body-tertiary": var(--#{$prefix}tertiary-color),
                        "body-emphasis": var(--#{$prefix}emphasis-color),
                        "reset": inherit
                    )
                )
        ),
    "text-opacity": (
        css-var: true,
        class: text-opacity,
        values: map-remove($opacitys-base, 10)
    ),
    "text-color": (
        property: color,
        class: text,
        values: $utilities-text-emphasis-colors
    ),
    // scss-docs-end utils-color
    // scss-docs-start utils-links
    "link-opacity":
        (
            css-var: true,
            class: link-opacity,
            state: hover,
            values: $opacitys-base
        ),
    "link-offset": (
        property: text-underline-offset,
        class: link-offset,
        state: hover,
        values: (
            1: 0.125em,
            2: 0.25em,
            3: 0.375em
        )
    ),
    "link-underline": (
        property: text-decoration-color,
        class: link-underline,
        local-vars: (
            "link-underline-opacity": 1
        ),
        values:
            map-merge(
                $utilities-links-underline,
                (
                    null: rgba(var(--#{$prefix}link-color-rgb), var(--#{$prefix}link-underline-opacity, 1))
                )
            )
    ),
    "link-underline-opacity": (
        css-var: true,
        class: link-underline-opacity,
        state: hover,
        values:
            map-merge(
                $opacitys-base,
                (
                    0: 0
                )
            )
    ),
    // scss-docs-end utils-links
    // scss-docs-start utils-bg-color
    "background-color":
        (
            property: background-color,
            class: bg,
            local-vars: (
                "bg-opacity": 1
            ),
            values:
                map-merge(
                    $utilities-bg-colors,
                    (
                        "transparent": transparent,
                        "body-secondary": rgba(var(--#{$prefix}secondary-bg-rgb), var(--#{$prefix}bg-opacity)),
                        "body-tertiary": rgba(var(--#{$prefix}tertiary-bg-rgb), var(--#{$prefix}bg-opacity))
                    )
                )
        ),
    "bg-opacity": (
        css-var: true,
        class: bg-opacity,
        values: $opacitys-base
    ),
    "subtle-background-color": (
        property: background-color,
        class: bg,
        values: $utilities-bg-subtle
    ),
    // scss-docs-end utils-bg-color
    "gradient":
        (
            property: background-image,
            class: bg,
            values: (
                gradient: var(--#{$prefix}gradient)
            )
        ),
    // scss-docs-start utils-interaction
    "user-select":
        (
            property: user-select,
            values: all auto none
        ),
    "pointer-events": (
        property: pointer-events,
        class: pe,
        values: none auto
    ),
    // scss-docs-end utils-interaction
    // scss-docs-start utils-border-radius
    "rounded":
        (
            property: border-radius,
            class: rounded,
            values: $border-radiuses
        ),
    "rounded-top": (
        property: border-top-left-radius border-top-right-radius,
        class: rounded-top,
        values: $border-radiuses
    ),
    "rounded-end": (
        property: border-top-right-radius border-bottom-right-radius,
        class: rounded-end,
        values: $border-radiuses
    ),
    "rounded-bottom": (
        property: border-bottom-right-radius border-bottom-left-radius,
        class: rounded-bottom,
        values: $border-radiuses
    ),
    "rounded-start": (
        property: border-bottom-left-radius border-top-left-radius,
        class: rounded-start,
        values: $border-radiuses
    ),
    // scss-docs-end utils-border-radius
    // scss-docs-start utils-visibility
    "visibility":
        (
            property: visibility,
            class: null,
            values: (
                visible: visible,
                invisible: hidden
            )
        ),
    // scss-docs-end utils-visibility
    // scss-docs-start utils-zindex
    "z-index":
        (
            property: z-index,
            values: $zindex-levels
        ),
    // scss-docs-end utils-zindex
    // Opacity utilities
    // scss-docs-start utils-opacity
    "opacity":
        (
            property: opacity,
            state: hover,
            values: $opacitys
        ),
    // scss-docs-end utils-opacity
);
